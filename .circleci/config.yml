version: 2.1
executors:
  standard-docker:
    docker:
      - image: circleci/ruby:2.6.3-node-browsers
      - image: mongo:4.1.4-xenial
commands:
  setup-ruby-environment:
    description: 'Common steps of installing the application'
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
  run-tests:
    description: 'Runs a test suite given in parameter'
    parameters:
      filename:
        type: string
      suite:
        type: string
    steps:
      - setup-ruby-environment
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            
            bundle exec rspec --format html \
                            --out /tmp/test-results/<< parameters.filename >>.html \
                            --format progress \
                            << parameters.suite >>
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

jobs:
  test-job-campaigns:
    executor: standard-docker
    working_directory: ~/repo
    steps:
      - run-tests:
          filename: 'test_campaigns'
          suite: 'spec/controllers/campaigns_spec.rb'
  test-job-files:
    executor: standard-docker
    working_directory: ~/repo
    steps:
      - run-tests:
          filename: 'test_files'
          suite: 'spec/controllers/files_spec.rb'
  test-job-messages:
    executor: standard-docker
    working_directory: ~/repo
    steps:
      - run-tests:
          filename: 'test_messages'
          suite: 'spec/controllers/messages_spec.rb'

  doc-job:
    executor: standard-docker
    working_directory: ~/repo
    steps:
      - setup-ruby-environment
      - run:
          name: run documentation
          command: |
            mkdir /tmp/docs
            bundle exec yard doc -o /tmp/docs controllers/ decorators/ services/
      - store_test_results:
          path: /tmp/docs
      - store_artifacts:
          path: /tmp/docs
          destination: docs

  rubocop-job:
    executor: standard-docker
    working_directory: ~/repo
    steps:
      - setup-ruby-environment
      - run:
          name: run static analysis
          command: |
            mkdir /tmp/rubocop
            bundle exec rubocop -F -f h -o /tmp/rubocop/report.html controllers decorators services
      - store_test_results:
          path: /tmp/rubocop
      - store_artifacts:
          path: /tmp/rubocop
          destination: rubocop

  deploy-job:
    executor: standard-docker
    working_directory: ~/repo
    steps:
      - add_ssh_keys:
          fingerprints:
            - "fa:fe:e6:76:13:de:d6:1b:cc:5a:3d:42:3f:60:17:01"
      - checkout
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      - run:
          name: Deploy to Scaleway if tests pass and branch is Master
          command: bundle exec cap production deploy

workflows:
  version: 2.1
  build-deploy:
    jobs:
      - rubocop-job
      - test-job-campaigns:
          requires:
            - rubocop-job
      - test-job-files:
          requires:
            - rubocop-job
      - test-job-messages:
          requires:
            - rubocop-job
      - doc-job:
          requires:
            - rubocop-job
      - deploy-job:
          requires:
            - test-job-campaigns
            - test-job-files
            - test-job-messages
          filters:
            branches:
              only: master